{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","item","catch","console","log","err","searchForm","document","getElementById","searchInput","addEventListener","value","querySelector","showMessage","reddit","output","results","forEach","image","post","preview","images","source","url","title","truncateText","selftext","subreddit","score","innerHTML","e","preventDefault","msg","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":"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","file":"reddit-app.a28cc173.map","sourceRoot":"..","sourcesContent":["export default {\r\n    search: function (searchTerm, searchLimit, sortBy) {\r\n        // URL with our paramethers\r\n        return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`)\r\n            // We request results in JSON format\r\n            .then(res => res.json())\r\n            // We use map method to get only data\r\n            .then(data => data.data.children.map(item => item.data))\r\n            // In case of error log it\r\n            .catch(err => console.log(err));\r\n    }\r\n}","import reddit from './redditapi';\r\n\r\nconst searchForm = document.getElementById('search-form');\r\nconst searchInput = document.getElementById('search-input');\r\n\r\n// Add Event Listener for submit\r\nsearchForm.addEventListener('submit', e => {\r\n    // Get Search Term\r\n    const searchTerm = searchInput.value;\r\n    // Get Sort By radio buttons\r\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n    // Get Limit\r\n    const searchLimit = document.getElementById('limit').value;\r\n\r\n    // Check input\r\n    if (searchTerm === '') {\r\n        // Show Error Message\r\n        showMessage('Please add a search term', 'alert-danger')\r\n    }\r\n    // Clear input\r\n    searchInput.value = '';\r\n\r\n    // Search Reddit\r\n    reddit.search(searchTerm, searchLimit, sortBy)\r\n        .then(results => {\r\n            // HTML display\r\n            let output = '<div class=\"card-columns\">';\r\n            results.forEach(post => {\r\n                const image = post.preview ? post.preview.images[0].source.url : 'https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg'\r\n                output += `<div class=\"card\">\r\n                <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">${post.title}</h5>\r\n                  <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n                  <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\r\n                  <hr>\r\n                  <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\r\n                  <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n                </div>\r\n              </div>`;\r\n            })\r\n            output += '<div>';\r\n            document.getElementById('results').innerHTML = output;\r\n        })\r\n\r\n    e.preventDefault();\r\n})\r\n\r\nfunction showMessage(msg, className) {\r\n    // Create empty div\r\n    const div = document.createElement('div');\r\n    // Add class name\r\n    div.className = `alert ${className}`;\r\n    // Create element that will display text\r\n    div.appendChild(document.createTextNode(msg));\r\n    // Get parent, and first element after place where we wanna insert text \r\n    const searchContainer = document.getElementById('search-container');\r\n    const search = document.getElementById('search');\r\n    // Insert text, first paramether is what are we inserting, second is first element after \r\n    searchContainer.insertBefore(div, search);\r\n    // Set timeout to remove our msg after 3 seconds\r\n    setTimeout(() => document.querySelector('.alert').remove(), 3000);\r\n\r\n}\r\n\r\nfunction truncateText(text, limit) {\r\n    const shortened = text.indexOf(' ', limit);\r\n    if (shortened == -1) return text;\r\n    return text.substring(0, shortened) + \"...\";\r\n}"]}